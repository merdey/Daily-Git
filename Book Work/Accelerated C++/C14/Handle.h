#ifndef GUARD_handle_h#define GUARD_handle_htemplate <class T> class Handle { public:  Handle(): p(0) {}  Handle(const Handle& s): p(0) {if (s.p) p = s.p->clone(); }  Handle& operator=(const Handle&);  ~Handle() { delete p; }    Handle(T* t): p(t) {}    operator bool() const { return p; }  T& operator*() const;  T* operator->() const;    static bool compare_Core_handles(const Handle& h1, const Handle& h2) {    return h2->name() < h2->name();  } private:  T* p;};#endif